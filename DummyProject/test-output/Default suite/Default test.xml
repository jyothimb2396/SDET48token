<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-A3C766P" failures="0" tests="2" name="Default test" time="0.074" errors="0" timestamp="2023-05-31T15:50:00 IST">
  <testcase classname="GenericsBank.BaseclassUtility" name="@BeforeClass launchBrowser" time="0.001">
    <failure type="java.io.FileNotFoundException" message=".\src\test\resources\Common.properties (The system cannot find the file specified)">
      <![CDATA[java.io.FileNotFoundException: .\src\test\resources\Common.properties (The system cannot find the file specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
at GenericsBank.FileUtility.get_Property_Value(FileUtility.java:11)
at GenericsBank.BaseclassUtility.launchBrowser(BaseclassUtility.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass launchBrowser -->
  <testcase classname="GenericsBank.BaseclassUtility" name="@BeforeMethod launchApplication" time="-1.685528400407E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="GenericsBank.BaseclassUtility" name="@AfterMethod closeApplication" time="-1.685528400416E9">
    <skipped/>
  </testcase> <!-- @AfterMethod closeApplication -->
  <testcase classname="GenericsBank.BaseclassUtility" name="@BeforeMethod launchApplication" time="-1.685528400419E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="GenericsBank.BaseclassUtility" name="@AfterMethod closeApplication" time="-1.685528400428E9">
    <skipped/>
  </testcase> <!-- @AfterMethod closeApplication -->
  <testcase classname="GenericsBank.BaseclassUtility" name="@AfterClass closeBrowser" time="-1.68552840043E9">
    <skipped/>
  </testcase> <!-- @AfterClass closeBrowser -->
  <testcase classname="Pract1.HelloTest" name="bye" time="0.0">
    <skipped/>
  </testcase> <!-- bye -->
  <testcase classname="Pract1.HelloTest" name="good" time="0.0">
    <skipped/>
  </testcase> <!-- good -->
</testsuite> <!-- Default test -->
